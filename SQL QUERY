use students;
CREATE TABLE STUDENT(
ID INT NOT NULL AUTO_INCREMENT,
NAME VARCHAR(30),
AGE INT,
GENDER VARCHAR(30),
CITY VARCHAR(30),
COMM VARCHAR(30),
CID INT,
ROLLNO VARCHAR(30),
PRIMARY KEY (ID)
);

CREATE TABLE COURSES(
CID INT NOT NULL AUTO_INCREMENT,
CNAME VARCHAR(30),
PRIMARY KEY(CID)
);
CREATE TABLE `students`.`marks` (
  `MID` INT NOT NULL,
  `ID` INT NULL,
  `M1` INT NULL,
  `M2` INT NULL,
  `M3` INT NULL,
  PRIMARY KEY (`MID`),
  INDEX `ID_idx` (`ID` ASC) VISIBLE,
  CONSTRAINT `ID`
    FOREIGN KEY (`ID`)
    REFERENCES `students`.`student` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);
INSERT INTO STUDENT(NAME,AGE,GENDER,CITY,COMM,CID,ROLLNO) VALUES
('VIPIN',20,'MALE','TIRUPUR','BC',1,'A0001'),
('GIRI',20,'MALE','COIMBATORE','BC',1,'A0002'),
('SABARI',20,'MALE','CHENNAI','BC',1,'A0003'),
('BALA',20,'MALE','BANGALORE','BC',1,'A0004'),
('VIMAL',20,'MALE','COIMBATORE','BC',1,'A0005'),
('VIKI',20,'MALE','CHENNAI','BC',1,'A0006'),
('DEEPAK',20,'MALE','BANGALORE','BC',1,'A0007'),
('LOGESH',20,'MALE','COIMBATORE','BC',1,'A0008'),
('ABJITH',20,'MALE','CHENNAI','BC',1,'A0009'),
('VENKAT',20,'MALE','TIRUPUR','BC',1,'A0010'),
('ARAVIND',20,'MALE','COIMBATORE','BC',1,'A0011'),
('NIVAS',20,'MALE','CHENNAI','BC',1,'A0012'),
('RAHUL',20,'MALE','BANGALORE','BC',1,'A0013'),
('GOKUL',20,'MALE','COIMBATORE','BC',1,'A0014'),
('VENAKT',20,'MALE','CHENNAI','BC',1,'A0015'),
('GOKUL',20,'MALE','TIRUPUR','BC',1,'A0016'),
('AARTHI',20,'FEMALE','COIMBATORE','BC',1,'A0017'),
('SAMITA',20,'FEMALE','CHENNAI','BC',1,'A0018'),
('JANANI',20,'FEMALE','TIRUPUR','BC',1,'A0019'),
('NANTHANA',20,'FEMALE','COIMBATORE','BC',1,'A0020'),
('ROJA',20,'FEMALE','CHENNAI','BC',1,'A0021'),
('VIPIN',20,'MALE','BANGALORE','BC',1,'A0022'),
('SARANYA',20,'FEMALE','COIMBATORE','BC',1,'A0023'),
('VINOTH',20,'MALE','CHENNAI','BC',1,'A0024');
INSERT INTO COURSES(CID,CNAME) VALUES
(1,'BCA'),
(2,'MCA'),
(3,'MBA');
INSERT INTO MARKS(MID,ID,M1,M2,M3) VALUES
(1,1,90,80,70),
(2,2,30,40,50),
(3,3,92,87,75),
(4,4,28,40,29),
(5,5,90,80,70),
(6,6,90,80,70),
(7,7,90,80,70),
(8,8,90,80,70),
(9,9,90,80,70),
(10,10,90,80,70),
(11,11,90,80,70),
(12,12,90,80,70),
(13,13,90,80,70),
(14,14,90,80,70),
(15,15,90,80,70),
(16,16,90,80,70),
(17,17,90,80,70),
(18,18,90,80,70),
(19,19,90,80,70),
(20,20,90,80,70),
(21,21,90,80,70),
(22,22,90,80,70),
(23,23,90,80,70),
(24,24,90,80,70);
SELECT STUDENT.NAME,STUDENT.ROLLNO,COURSES.CNAME FROM STUDENT
INNER JOIN COURSES ON STUDENT.CID = COURSES.CID;
SELECT STUDENT.NAME,STUDENT.ROLLNO,COURSES.CNAME, MARKS.M1,MARKS.M2,MARKS.M3 FROM STUDENT
INNER JOIN COURSES ON STUDENT.CID = COURSES.CID
INNER JOIN MARKS ON STUDENT.ID = MARKS.ID;
SELECT STUDENT.CITY,STUDENT.ROLLNO,COURSES.CNAME,MARKS.M1,MARKS.M2 FROM STUDENT
INNER JOIN COURSES ON STUDENT.CID = COURSES.CID
INNER JOIN MARKS ON STUDENT.ID = MARKS.ID;
SELECT STUDENT.NAME,STUDENT.ROLLNO,COURSES.CNAME AS COURSE ,MARKS.M1,MARKS.M2,MARKS.M3,
(MARKS.M1+MARKS.M2+MARKS.M3) AS TOTAL FROM STUDENT
INNER JOIN COURSES ON STUDENT.CID = COURSES.CID
INNER JOIN MARKS ON STUDENT.ID = MARKS.ID;
CREATE VIEW REPORTS AS
SELECT STUDENT.NAME,STUDENT.ROLLNO,COURSES.CNAME AS COURSE ,MARKS.M1,MARKS.M2,MARKS.M3,
(MARKS.M1+MARKS.M2+MARKS.M3) AS TOTAL , ROUND((MARKS.M1+MARKS.M2+MARKS.M3)/3,0) AS AVERAGE,
CASE
  WHEN MARKS.M1>=35 AND MARKS.M2>=35 AND MARKS.M3>=35 THEN 'PASS'
  ELSE 'FAIL'
END AS RESULT,
CASE
  WHEN MARKS.M1>=35 AND MARKS.M2>=35 AND MARKS.M3>=35 THEN
  -- NESTED CASE
  CASE
    WHEN ROUND((MARKS.M1+MARKS.M2+MARKS.M3)/3,0)>=90 AND ROUND((MARKS.M1+MARKS.M2+MARKS.M3)/3,0)<=100 THEN 'A'
	WHEN ROUND((MARKS.M1+MARKS.M2+MARKS.M3)/3,0)>=80 AND ROUND((MARKS.M1+MARKS.M2+MARKS.M3)/3,0)<=89 THEN 'B'
    ELSE 'C'
  END
  ELSE 'NO GRADE'
END AS GRADE FROM STUDENT
INNER JOIN COURSES ON STUDENT.CID = COURSES.CID
INNER JOIN MARKS ON STUDENT.ID = MARKS.ID
WHERE COURSES.CNAME = 'BCA' HAVING RESULT = 'PASS' AND (AVERAGE>=80 AND AVERAGE<=100);
-- WE CAN USE AND AFTER HAVING
SHOW TABLES;
SELECT * FROM REPORTS WHERE RESULT='PASS';
SELECT STUDENT.NAME,STUDENT.ROLLNO,MARKS.M1,MARKS.M2,MARKS.M3 FROM STUDENT
INNER JOIN MARKS ON MARKS.ID = STUDENT.ID;
UPDATE MARKS INNER JOIN STUDENT ON STUDENT.ID = MARKS.ID
SET M1=34,M2=45,M3=29
WHERE STUDENT.ROLLNO='A0007';
